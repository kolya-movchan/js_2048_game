{"version":3,"sources":["scripts/main.js"],"names":["startButton","document","querySelector","allCells","querySelectorAll","score","messageStart","messageWin","messageLose","getRandomNum","max","Math","floor","random","drop2or4","randomNumbers","length","createCell","firstCell","availableCells","filter","cell","textContent","randomCell","randomNumber","newCell","classList","add","style","setTimeout","hideMessages","setAttribute","shiftTheCell","startValue","endValue","distance","option","rowExtra","i","thisCell","thisCellFull","hasChildNodes","targetCell","targetCellEmpty","stayInParentRow","parentElement","transformCell","removeExtra","checkIfShifted","element","remove","toElement","fromElement","className","changedCells","map","launchRestartButton","createCombo","comboCreated","contains","updateScore","checkIfWin","removeActiveCombo","activeCombos","winCombo","eraseProgress","some","checkVerticalCombo","checkHorizontalCombo","nextElementSibling","checkIfGameOver","allCellsAreFull","every","horizontalCombo","verticalCombo","addEventListener","cell1","ev","pressedLeft","key","roundPerformed","comboPerformed","pressedRight","pressedUp"],"mappings":"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","file":"main.0bc7dec1.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst startButton = document.querySelector('.start');\nconst allCells = document.querySelectorAll('.field-cell');\nconst score = document.querySelector('.game-score');\n\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nstartButton.addEventListener('click', () => {\n  eraseProgress();\n  hideMessages();\n\n  const cell1 = createCell();\n\n  createCell(cell1);\n});\n\ndocument.addEventListener('keydown', (ev) => {\n  const pressedLeft = ev.key === 'ArrowLeft';\n\n  if (pressedLeft) {\n    const roundPerformed = shiftTheCell(1, 0, 1, 'minus', 'stay-in-parent-row');\n    const comboPerformed = createCombo(1, 0, 1, 'minus', 'stay-in-parent-row');\n\n    removeActiveCombo();\n\n    if (roundPerformed || comboPerformed) {\n      createCell();\n    }\n\n    checkIfGameOver();\n  }\n});\n\ndocument.addEventListener('keydown', (ev) => {\n  const pressedRight = ev.key === 'ArrowRight';\n\n  if (pressedRight) {\n    const roundPerformed = shiftTheCell(0, 1, 1, 'add', 'stay-in-parent-row');\n    const comboPerformed = createCombo(0, 1, 1, 'add', 'stay-in-parent-row');\n\n    removeActiveCombo();\n\n    if (roundPerformed || comboPerformed) {\n      createCell();\n    }\n\n    checkIfGameOver();\n  }\n});\n\ndocument.addEventListener('keydown', (ev) => {\n  const pressedUp = ev.key === 'ArrowUp';\n\n  if (pressedUp) {\n    const roundPerformed = shiftTheCell(4, 0, 4, 'minus');\n    const comboPerformed = createCombo(4, 0, 4, 'minus');\n\n    removeActiveCombo();\n\n    if (roundPerformed || comboPerformed) {\n      createCell();\n    }\n\n    checkIfGameOver();\n  }\n});\n\ndocument.addEventListener('keydown', (ev) => {\n  const pressedUp = ev.key === 'ArrowDown';\n\n  if (pressedUp) {\n    const roundPerformed = shiftTheCell(0, 4, 4, 'add');\n    const comboPerformed = createCombo(0, 4, 4, 'add');\n\n    removeActiveCombo();\n\n    if (roundPerformed || comboPerformed) {\n      createCell();\n    }\n\n    checkIfGameOver();\n  }\n});\n\nfunction getRandomNum(max) {\n  return Math.floor(Math.random() * max);\n};\n\nfunction drop2or4() {\n  const randomNumbers = [2, 2, 2, 2, 2, 4, 2, 2, 2, 2];\n\n  const randomIndex = getRandomNum(randomNumbers.length);\n\n  return randomNumbers[randomIndex];\n};\n\nfunction createCell(firstCell) {\n  const availableCells = [...allCells].filter(cell => !cell.textContent);\n  const randomCell = getRandomNum(availableCells.length);\n\n  if (firstCell === randomCell) {\n    return createCell(firstCell);\n  }\n\n  const randomNumber = drop2or4();\n  const newCell = availableCells[randomCell];\n\n  newCell.textContent = randomNumber;\n  newCell.classList.add(`field-cell--${randomNumber}`);\n\n  newCell.style = `transform: scale(80%); transition: 0.1s`;\n\n  setTimeout(() => {\n    newCell.style = '';\n  }, 100);\n};\n\nfunction hideMessages() {\n  messageStart.classList.add('hidden');\n  messageStart.setAttribute('active', '');\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n}\n\nfunction shiftTheCell(startValue, endValue, distance, option, rowExtra) {\n  for (let i = startValue; i < allCells.length - endValue; i++) {\n    const thisCell = allCells[i];\n    const thisCellFull = allCells[i].hasChildNodes();\n\n    let targetCell;\n    let targetCellEmpty;\n    let stayInParentRow;\n\n    if (option === 'add') {\n      targetCell = allCells[i + distance];\n      targetCellEmpty = !allCells[i + distance].hasChildNodes();\n    }\n\n    if (option === 'minus') {\n      targetCell = allCells[i - distance];\n      targetCellEmpty = !allCells[i - distance].hasChildNodes();\n    }\n\n    if (rowExtra) {\n      stayInParentRow = targetCell.parentElement === thisCell.parentElement;\n    } else {\n      stayInParentRow = true;\n    }\n\n    if (thisCellFull && targetCellEmpty && stayInParentRow) {\n      transformCell(targetCell, thisCell);\n      removeExtra(thisCell);\n      thisCell.classList.add('changed');\n\n      return shiftTheCell(startValue, endValue, distance, option, rowExtra);\n    }\n  }\n\n  return checkIfShifted();\n};\n\nfunction removeExtra(element) {\n  element.classList.remove(`field-cell--${element.textContent}`);\n  element.textContent = '';\n}\n\nfunction transformCell(toElement, fromElement) {\n  toElement.className = fromElement.className;\n  toElement.textContent = fromElement.textContent;\n}\n\nfunction checkIfShifted() {\n  const changedCells = document.querySelectorAll('.changed');\n\n  if (changedCells.length) {\n    [...changedCells].map(cell => cell.classList.remove('changed'));\n\n    launchRestartButton();\n\n    return true;\n  }\n}\n\nfunction createCombo(startValue, endValue, distance, option, rowExtra) {\n  let comboCreated = false;\n  let stayInParentRow;\n\n  for (let i = startValue; i < allCells.length - endValue; i++) {\n    const thisCell = allCells[i];\n    let targetCell = allCells[i - distance];\n\n    if (option === 'add') {\n      targetCell = allCells[i + distance];\n    }\n\n    if (rowExtra) {\n      stayInParentRow = targetCell.parentElement === thisCell.parentElement;\n    } else {\n      stayInParentRow = true;\n    }\n\n    if (thisCell.textContent\n      && thisCell.textContent === targetCell.textContent\n      && !thisCell.classList.contains('active-combo')\n      && stayInParentRow) {\n      targetCell.classList.remove(`field-cell--${targetCell.textContent}`);\n      targetCell.textContent *= 2;\n\n      targetCell.classList.add(`field-cell--${targetCell.textContent}`,\n        'active-combo');\n\n      targetCell.style = ' background-color: #deeaee';\n\n      setTimeout(() => {\n        targetCell.style = '';\n      }, 100);\n\n      removeExtra(thisCell);\n      updateScore(targetCell);\n      launchRestartButton();\n      checkIfWin();\n\n      comboCreated = true;\n    }\n  }\n\n  return comboCreated;\n};\n\nfunction removeActiveCombo() {\n  const activeCombos = document.querySelectorAll('.active-combo');\n\n  if (activeCombos.length) {\n    [...activeCombos].map(cell => cell.classList.remove('active-combo'));\n  }\n};\n\nfunction updateScore(winCombo) {\n  score.textContent = +score.textContent + +winCombo.textContent;\n}\n\nfunction launchRestartButton() {\n  startButton.classList.add('restart');\n  startButton.textContent = 'Restart';\n};\n\nfunction eraseProgress() {\n  [...allCells].map(cell => {\n    removeExtra(cell);\n  });\n\n  score.textContent = 0;\n};\n\nfunction checkIfWin() {\n  if ([...allCells].some(cell => cell.textContent === '2048')) {\n    messageWin.classList.remove('hidden');\n  }\n}\n\nfunction checkVerticalCombo() {\n  for (let i = 4; i < allCells.length; i++) {\n    if (allCells[i].textContent\n      && allCells[i].textContent === allCells[i - 4].textContent) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction checkHorizontalCombo() {\n  return [...allCells].some(cell =>\n    cell.textContent && cell.nextElementSibling && cell.textContent\n    === cell.nextElementSibling.textContent);\n}\n\nfunction checkIfGameOver() {\n  const allCellsAreFull = [...allCells].every(cell => cell.textContent);\n  const horizontalCombo = checkHorizontalCombo();\n  const verticalCombo = checkVerticalCombo();\n\n  if (allCellsAreFull && !horizontalCombo && !verticalCombo) {\n    messageLose.classList.remove('hidden');\n  }\n}\n"]}